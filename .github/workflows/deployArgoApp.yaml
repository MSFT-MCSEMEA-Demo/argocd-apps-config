name: DemoApp Deployment
env:    
  ENVIRONMENT_NAME: "${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}"
# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: "argoCD app environment"
        type: choice
        default: "dev"
        options:
          - "dev"
          - "prod"
      name:
        type: string
        description: "ArgoCD App name"
        default: "demoapp"
      resource_group:
        type: string
        description: "Resource Group name"
        default: "ypdemodev-rg"
      aks_name:
        type: string
        description: "AKS name"
        default: "ypdemodev-aks"   
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  
  Deploy_DemoApp:    
    runs-on: ubuntu-latest        
    environment: 
      name: '${{ github.event.inputs.name }}_${{ github.event.inputs.environment }}' 
      url: ${{ steps.argoapp.outputs.url }}   
    steps:  
    - name: Checkout source code 
      uses: actions/checkout@v3
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ github.event.inputs.resource_group }}' 
        cluster-name: '${{ github.event.inputs.aks_name }}'
    - name: Deploy ArgoCD DemoApp
      id: argoapp
      run: |
        kubectl apply -n argocd -f ./argoCD-apps/demo-app/argocd-app-${{ github.event.inputs.environment }}.yaml        
        sleep 30
        echo "url=http://$(kubectl get svc ${{ github.event.inputs.name }}-svc -n ${{ github.event.inputs.name }}  -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_OUTPUT          
